{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/movies.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","Title","Poster","imdbID","Plot","loading","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","getMovie","title","a","fetch","response","ok","Error","status","statusText","json","FindMovie","onAdd","error","setError","useState","value","setValue","setMovie","setLoading","htmlFor","type","id","placeholder","classnames","onChange","target","onClick","then","data","App","setMovies","length","newMovie","some","current","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94d98cfb.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  Title,\n  Poster,\n  imdbID,\n  Plot,\n  loading,\n}) => (\n  <div className=\"card\">\n    {!loading && (\n      <>\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              src={Poster}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"images/imdb-logo.jpeg\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-8\">{Title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\">\n            {Plot}\n            <br />\n            <a href={`https://www.imdb.com/title/${imdbID}`}>IMDB</a>\n          </div>\n        </div>\n      </>\n    )}\n  </div>\n);\n\nMovieCard.propTypes = {\n  Title: PropTypes.string.isRequired,\n  Poster: PropTypes.string.isRequired,\n  imdbID: PropTypes.string.isRequired,\n  Plot: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nMovieCard.defaultProps = {\n  Plot: '',\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies,\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbID} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbID: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=cf59143c';\n\nexport const getMovie = async(title) => {\n  const response = await fetch(`${BASE_URL}&t=${title}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport classnames from 'classnames';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/movies';\n\nexport const FindMovie = ({ onAdd, error, setError }) => {\n  const [value, setValue] = useState('');\n  const [movie, setMovie] = useState('');\n\n  const [loading, setLoading] = useState(false);\n\n  const handleSearch = ({ target }) => {\n    setError(false);\n    setValue(target.value);\n  };\n\n  const searchMovie = () => {\n    setLoading(true);\n\n    getMovie(value).then((data) => {\n      if (data.Error) {\n        setError(true);\n        setMovie(null);\n        setLoading(false);\n\n        return;\n      }\n\n      setMovie(data);\n      setLoading(false);\n    });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classnames('input', { 'is-danger': error })}\n              value={value}\n              onChange={handleSearch}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className={\n                classnames('button', 'is-light', { 'is-loading': loading })}\n              onClick={searchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (movie) {\n                  onAdd(movie);\n                  setMovie('');\n                  setValue('');\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard {...movie} loading={loading} />}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n  error: PropTypes.bool.isRequired,\n  setError: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n\n  const addNewMovie = (newMovie) => {\n    if (movies.some(movie => movie.imdbID === newMovie.imdbID)\n      || error) {\n      return;\n    }\n\n    setMovies(current => [...current, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {movies.length ? (\n          <MoviesList movies={movies} />\n        ) : (\n          <h2>Movie list is empty</h2>\n        )}\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          onAdd={addNewMovie}\n          error={error}\n          setError={setError}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}